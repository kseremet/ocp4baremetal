- name: Prepare HTTP server
  hosts: utility
  gather_facts: yes
  vars:
    master_ign_file: "{{ ocp_cluster_name }}/master.ign"
    worker_ign_file: "{{ ocp_cluster_name }}/worker.ign"
    bootstrap_ign_file: "{{ ocp_cluster_name }}/bootstrap.ign"
    http_document_root: "/var/www/html/{{ coreos_inst_ignition_dir }}"
    bootstrap_ignition_config_url: "http://{{ ansible_default_ipv4.address }}:{{ webport }}/{{ coreos_inst_ignition_dir }}/bootstrap.ign"
  tasks: 
  - name: include variables
    include_vars: default_vars.yaml

  - name: Create new cluster's directory
    file:
      path: "{{ ocp_cluster_name }}"
      state: directory

  - name: Put install-config.yaml into cluster directory
    template:
      src: templates/install-config.j2
      dest: "{{ ocp_cluster_name }}/install-config.yaml"

  - name: Create ignition configs of new cluster
    command: openshift-install create ignition-configs --dir={{ ocp_cluster_name }}

  - name: Copy bootstrap ignition file to http server
    copy:
      remote_src: yes
      src: "{{ bootstrap_ign_file }}"
      dest: "{{ http_document_root }}/bootstrap.ign"

  - name: Copy master ignition file to http server
    copy:
      remote_src: yes
      src: "{{ ocp_cluster_name }}/master.ign"
      dest: "{{ http_document_root }}/master.ign"

  - name: Copy master ignition file to http server
    copy:
      remote_src: yes
      src: "{{ ocp_cluster_name }}/worker.ign"
      dest: "{{ http_document_root }}/worker.ign"
  
  - name: Check that http server is serving bootstrap ignition file
    uri:
      url: "{{ bootstrap_ignition_config_url }}"
      return_content: no
      status_code: 200
    delegate_to: localhost

  - name: Power ON bootstrap vm
    ovirt_vm:
      state: running
      name: "{{ ocp_cluster_name }}-bootstrap1"
    delegate_to: localhost
  
- name: Wait for bootstrap machine
  hosts: bootstrap
  gather_facts: yes
  tasks: 
  - name: Wait for bootstrap machine to be reachable over network
    wait_for_connection:
      delay: 60
      timeout: 300

- name: Power on master and worker vms
  hosts: localhost
  connection: local
  gather_facts: no
  tasks: 
  - name: Power ON master vms
    ovirt_vm:
      state: running
      name: "{{ ocp_cluster_name }}-master{{ item }}"
    with_sequence: count={{ ocp_master_vm_count }}

  - name: Power ON worker vms
    ovirt_vm:
      state: running
      name: "{{ ocp_cluster_name }}-worker{{ item }}"
    with_sequence: count={{ ocp_worker_vm_count }}

- name: Wait for OpenShift installation to complete
  hosts: utility
  gather_facts: yes
  environment:
    KUBECONFIG: "{{ ocp_cluster_name }}/auth/kubeconfig"
  tasks:
  - name: Wait for bootstrap complete
    command: openshift-install --dir={{ ocp_cluster_name }} wait-for bootstrap-complete
    register: result
  
  - debug: var=result

  - name: Wait for image registry crd to become available
    command: oc wait --for=condition=Progressing configs.imageregistry.operator.openshift.io --all --timeout=1200s
    register: result
    until: result.rc == 0
    retries: 10
    delay: 60
    ignore_errors: yes

  - name: Configure storage for the image registry
    command: oc patch configs.imageregistry.operator.openshift.io cluster --type merge --patch '{"spec":{"storage":{"emptyDir":{}}}}'

  - name: Wait for installation complete
    command: openshift-install --dir={{ ocp_cluster_name }} wait-for install-complete
    register: result

  - debug: var=result