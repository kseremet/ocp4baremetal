---
- name: Configure Network Services
  hosts: utility
  gather_facts: true
  vars_files:
  - default_vars.yaml

  tasks:
  - name: Login to RHV
    ovirt_auth:
      insecure: true
    delegate_to: localhost

  - name: fact for ips
    set_fact:
      master_ip_addresses: "{{ ocp_master_ips.split(',') }}"
      worker_ip_addresses: "{{ ocp_worker_ips.split(',') }}"
      bootstrap_ip_addresses: "{{ ocp_bootstrap_ip.split(',') }}"
    delegate_to: localhost

  - name: install and configure haproxy
    include_tasks: haproxy.yaml

  - name: update host dnsmasq for dhcp options to fix ips
    import_tasks: update_pxeboot_dnsmasq.yaml
    vars:
      vm_name: "{{ ocp_cluster_name }}-bootstrap1"
      ign_type: bootstrap
      vmip: "{{ bootstrap_ip_addresses[0] }}"

  - name: update host dnsmasq for dhcp options to fix ips
    include_tasks: update_pxeboot_dnsmasq.yaml
    vars:
      vm_name: "{{ ocp_cluster_name }}-master{{ item }}"
      ign_type: master
      vmip: "{{master_ip_addresses[ item | int-1 ]}}"
    with_sequence: count={{ ocp_master_vm_count }}

  - name: update host dnsmasq for dhcp options to fix ips
    include_tasks: update_pxeboot_dnsmasq.yaml
    vars:
      vm_name: "{{ ocp_cluster_name }}-worker{{ item }}"
      ign_type: worker
      vmip: "{{worker_ip_addresses[ item | int-1 ]}}"
    with_sequence: count={{ ocp_worker_vm_count }}

  - name: update etcd records 
    lineinfile:
      path: /etc/hosts
      regexp: "etcd-{{ item | int-1  }}"
      line: "{{master_ip_addresses[ item | int-1 ]}}     etcd-{{ item | int-1 }}.{{ ocp_cluster_name }}.{{ domain_name }}"
    with_sequence: count={{ ocp_master_vm_count }}

  - name : restart haproxy
    service:
      name: haproxy
      state: restarted
